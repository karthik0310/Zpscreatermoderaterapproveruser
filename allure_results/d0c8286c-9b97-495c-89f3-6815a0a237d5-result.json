{"name": "test_search_and_edit", "status": "broken", "statusDetails": {"message": "Exception: Matching row not found", "trace": "setup = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0636d92c040c1bafd53849747ff87b74\")>, 'screenshots', <RootLogger root (WARNING)>)\n\n    @allure.feature(\"Search and Edit Entry\")\n    @allure.story(\"Search for name 'Automation text' and status 'Moderated', then click edit\")\n    def test_search_and_edit(setup):\n        driver, screenshot_dir, logger = setup\n    \n        with allure.step(\"Search for 'Automation text' with status 'Moderated' and click edit\"):\n            try:\n                # Wait until the table is visible\n                table = WebDriverWait(driver, 10).until(\n                    EC.visibility_of_element_located((By.ID, \"DataTables_Table_0\"))\n                )\n    \n                # Find all rows in the table body\n                rows = driver.find_elements(By.XPATH, \"//table[@id='DataTables_Table_0']/tbody/tr\")\n    \n                # Loop through each row to find the matching name and status\n                for row in rows:\n                    name = row.find_element(By.XPATH, \".//td[2]\").text\n                    status = row.find_element(By.XPATH, \".//td[7]\").text\n    \n                    if \"Automation text\" in name and status == \"Moderated\":\n                        # Take a screenshot of the row\n                        take_screenshot(driver, screenshot_dir, \"matching_row_found\")\n    \n                        # Click the 'Edit' button\n                        edit_button = row.find_element(By.XPATH, \".//td[8]/a[@class='btn btn-primary btn-sm edit_menu_button']\")\n                        edit_button.click()\n    \n                        logger.info(f\"Clicked the edit button for the row with name '{name}' and status '{status}'.\")\n                        break\n                else:\n                    logger.error(\"No matching row found with name 'Automation text' and status 'Moderated'.\")\n>                   raise Exception(\"Matching row not found\")\nE                   Exception: Matching row not found\n\ntest_approver_main_menu.py:148: Exception"}, "steps": [{"name": "Search for 'Automation text' with status 'Moderated' and click edit", "status": "broken", "statusDetails": {"message": "Exception: Matching row not found\n", "trace": "  File \"C:\\Users\\GrDs_MyGovK\\PycharmProjectsAutoTestingZPSCreatorModeratorAdmin\\pythonProject\\test_approver_main_menu.py\", line 148, in test_search_and_edit\n    raise Exception(\"Matching row not found\")\n"}, "attachments": [{"name": "search_and_edit_error", "source": "44dd7abd-f070-4d9c-a78f-e6647a400a54-attachment.png", "type": "image/png"}], "start": 1726229847453, "stop": 1726229848259}], "attachments": [{"name": "log", "source": "0ebe6dea-8ee7-4752-942d-e8d62e6ed1f3-attachment.txt", "type": "text/plain"}], "start": 1726229847453, "stop": 1726229848261, "uuid": "3a8309b3-90d9-4fec-905b-6fe194c95f2c", "historyId": "7164024eacd45a671fbbdea4c8cb8e23", "testCaseId": "7164024eacd45a671fbbdea4c8cb8e23", "fullName": "test_approver_main_menu#test_search_and_edit", "labels": [{"name": "story", "value": "Search for name 'Automation text' and status 'Moderated', then click edit"}, {"name": "feature", "value": "Search and Edit Entry"}, {"name": "suite", "value": "test_approver_main_menu"}, {"name": "host", "value": "DESKTOP-2GJCTFD"}, {"name": "thread", "value": "32500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_approver_main_menu"}]}